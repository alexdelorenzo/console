#
# Serverless Inc.'s Observability AWS IAM Role CloudFormation Template
#
# This is an AWS CloudFormation Template featuring the IAM Role required for Serverless Inc.'s
# (serverless.com) monitoring & observability products. It features a lot of AWS services
# because Serverless Inc.'s observability products support many AWS services.
#
# This template aims to be secure and user-friendly for your security leaders. It features:
#
#  - Clear separation of READ and (a few) WRITE permissions.
#  - Explicit permissions for IAM Actions. No asterisks.
#  - Removal of all sensitive IAM READ Actions (e.g. Data Records, Secrets, Source Code)
#  - In-line descriptions of every Resource and Action.
#  - Links back to the AWS documentation of the Action.
#  - Additional comments from Serverless Inc.
#
# We're standing by to answer your questions. Please contact our sales team at: sales@serverless.com
#

AWSTemplateFormatVersion: "2010-09-09"
Description: This is the IAM Role required to integrate your AWS account with Serverless Inc.'s (serverless.com) monitoring and observability products.
Resources:
  ServerlessIntegrationStackReporter:
    Type: AWS::CloudFormation::CustomResource
    Version: "1.0"
    Properties:
      ServiceToken:
        Ref: ReportServiceToken
      ExternalId:
        Ref: ExternalId
      Version:
        Ref: Version
  ServerlessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ":"
                  - - "arn"
                    - "aws"
                    - "iam"
                    - ""
                    - Ref: AccountId
                    - "root"
            Action:
              - sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId:
                  Ref: ExternalId
      Path: "/"
      ManagedPolicyArns:
        # The AWS managed policy provides read-only access to AWS services and resources
        - "arn:aws:iam::aws:policy/ReadOnlyAccess"
      RoleName: ServerlessRole
      Policies:
        - PolicyName: "serverless-read-policy-1"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  #
                  ##
                  ###
                  #### EXTRA READ PERMISSIONS
                  ###
                  ##
                  #

                  #
                  ## App Runner
                  # https://docs.aws.amazon.com/apprunner/latest/api/API_Operations.html

                  - "apprunner:DescribeAutoScalingConfiguration"
                  - "apprunner:DescribeCustomDomains"
                  - "apprunner:DescribeObservabilityConfiguration"
                  - "apprunner:DescribeOperation"
                  - "apprunner:DescribeService"
                  - "apprunner:DescribeVpcConnector"
                  - "apprunner:ListAutoScalingConfigurations"
                  - "apprunner:ListConnections"
                  - "apprunner:ListObservabilityConfigurations"
                  - "apprunner:ListOperations"
                  - "apprunner:ListServices"
                  - "apprunner:ListTagsForResource"
                  - "apprunner:ListVpcConnectors"

                  #
                  ## Cost Explorer
                  # https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Operations_AWS_Cost_Explorer_Service.html

                  - "ce:ListCostAllocationTags"

                  #
                  ## S3
                  # https://docs.aws.amazon.com/AmazonS3/latest/API/API_Operations_Amazon_Simple_Storage_Service.html

                  - "s3:DescribeMultiRegionAccessPointOperation"

                  #
                  ## Step Functions
                  # https://docs.aws.amazon.com/step-functions/latest/apireference/API_Operations.html

                  - "states:GetActivityTask"

                  #
                  ## X-Ray
                  # https://docs.aws.amazon.com/xray/latest/api/API_Operations.html

                  - "xray:ListTagsForResource"

                  #
                  ##
                  ###
                  #### WRITE PERMISSIONS
                  ###
                  ##
                  #

                  #
                  ## API Gateway
                  # https://docs.aws.amazon.com/apigateway/latest/api/API_Operations.html

                  # Serverless Inc. Comments: This enables us to automatically configure and continuously verify configuration exists for enabling logging from API Gateway and ingesting those logs.
                  # Changes information about a Stage resource.
                  - "apigateway:UpdateStage"

                  #
                  ## App Runner
                  # https://docs.aws.amazon.com/apprunner/latest/api/API_Operations.html

                  - "apprunner:TagResource"
                  - "apprunner:UntagResource"

                  #
                  ## AppSync
                  # https://docs.aws.amazon.com/apprunner/latest/api/API_Operations.html

                  - "appsync:TagResource"
                  - "appsync:UntagResource"

                  #
                  ## Cloudfront
                  # https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_Operations.html

                  - "cloudfront:TagResource"
                  - "cloudfront:UntagResource"

                  #
                  ## CloudTrail
                  # https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_Operations.html

                  - "cloudtrail:AddTags"
                  - "cloudtrail:RemoveTags"

                  #
                  ## Cloudwatch
                  # https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Operations.html

                  - "cloudwatch:TagResource"
                  - "cloudwatch:UntagResource"

                  ##
                  ## Cloudwatch Logs
                  # https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_Operations.html
                  # Serverless Inc. Comments: These enables us to automatically configure and continuously verify configuration exists Subscription filters for Cloudwatch.
                  # Creates or updates a destination. This operation is used only to create destinations for cross-account subscriptions.
                  # A destination encapsulates a physical resource (such as an Amazon Kinesis stream) and enables you to subscribe to a real-time stream of log events for a different account, ingested using PutLogEvents.
                  # Through an access policy, a destination controls what is written to it. By default, PutDestination does not set any access policy with the destination, which means a cross-account user cannot call PutSubscriptionFilter against this destination. To enable this, the destination owner must call PutDestinationPolicy after PutDestination.

                  - "logs:PutDestination"
                  - "logs:PutDestinationPolicy"
                  - "logs:PutSubscriptionFilter"
                  - "logs:DeleteSubscriptionFilter"
                  - "logs:TagLogGroup"
                  - "logs:UntagLogGroup"

                  #
                  ## CodeDeploy
                  # https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_Operations.html

                  - "codedeploy:TagResource"
                  - "codedeploy:UntagResource"

                  #
                  ## Cost Explorer
                  # https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Operations_AWS_Cost_Explorer_Service.html

                  - "ce:TagResource"
                  - "ce:UntagResource"

                  #
                  ## DynamoDB
                  # https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Operations_Amazon_DynamoDB.html

                  - "dynamodb:TagResource"
                  - "dynamodb:UntagResource"

                  #
                  ## ECS
                  # https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_Operations.html

                  - "ecs:TagResource"
                  - "ecs:UntagResource"

                  #
                  ## ElastiCache
                  # https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_Operations.html

                  - "elasticache:AddTagsToResource"
                  - "elasticache:RemoveTagsFromResource"

                  #
                  ## ELB (Elastic Load Balancing) V1
                  # https://docs.aws.amazon.com/elasticloadbalancing/2012-06-01/APIReference/API_Operations.html

                  - "elasticloadbalancing:AddTags"
                  - "elasticloadbalancing:RemoveTags"

                  #
                  ## ELB (Elastic Load Balancing) V2
                  # https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_Operations.html

                  - "elasticloadbalancing:AddTags"
                  - "elasticloadbalancing:RemoveTags"

                  #
                  ## EMR (Elastic Map Reduce)
                  # https://docs.aws.amazon.com/emr/latest/APIReference/API_Operations.html

                  - "elasticmapreduce:AddTags"
                  - "elasticmapreduce:RemoveTags"

                  #
                  ## ES (ElasticSearch)
                  # https://docs.aws.amazon.com/opensearch-service/latest/developerguide/configuration-api.html

                  - "es:AddTags"
                  - "es:RemoveTags"

                  #
                  ## Kinesis
                  # https://docs.aws.amazon.com/kinesis/latest/APIReference/API_Operations.html

                  - "kinesis:AddTagsToStream"
                  - "kinesis:RemoveTagsFromStream"

                  #
                  ## Lambda
                  # https://docs.aws.amazon.com/lambda/latest/dg/API_Operations.html

                  - "lambda:UpdateFunctionConfiguration"
                  - "lambda:InvokeAsync"
                  - "lambda:InvokeFunction"
                  - "lambda:TagResource"
                  - "lambda:UntagResource"

                  #
                  ## Organizations
                  # https://docs.aws.amazon.com/organizations/latest/APIReference/API_Operations.html

                  - "organizations:TagResource"
                  - "organizations:UntagResource"

                  #
                  ## Resource Group Tagging
                  # https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_Operations.html

                  - "tag:TagResources"
                  - "tag:TagResources"

                  #
                  ## RDS (Relational Database Service)
                  # https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_Operations.html

                  - "rds:AddTagsToResource"
                  - "rds:RemoveTagsFromResource"

                  #
                  ## S3
                  # https://docs.aws.amazon.com/AmazonS3/latest/API/API_Operations_Amazon_Simple_Storage_Service.html

                  - "s3:PutBucketNotification"
                  - "s3:PutBucketTagging"

                  #
                  ## SES (Simple Email Service) V2
                  # https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_Operations.html

                  - "ses:TagResource"
                  - "ses:UntagResource"

                  #
                  ## SQS (Simple Queue Service)
                  # https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_Operations.html

                  - "sqs:TagQueue"
                  - "sqs:UntagQueue"

                  #
                  ## Step Functions
                  # https://docs.aws.amazon.com/step-functions/latest/apireference/API_Operations.html

                  - "states:TagResource"
                  - "states:UntagResource"

                  #
                  ## X-Ray
                  # https://docs.aws.amazon.com/xray/latest/api/API_Operations.html

                  - "xray:TagResource"
                  - "xray:UntagResource"
                Resource: "*"
        - PolicyName: "serverless-metrics-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "cloudwatch:GetMetricStream"
                  - "cloudwatch:PutMetricStream"
                  - "cloudwatch:DeleteMetricStream"
                Resource:
                  - Sub "arn:aws:cloudwatch:*:${AWS::AccountId}:metric-stream/serverless_metric-stream"
              - Effect: Allow
                Action:
                  - "firehose:DescribeDeliveryStream"
                  - "firehose:CreateDeliveryStream"
                  - "firehose:DeleteDeliveryStream"
                Resource:
                  - !Sub "arn:aws:firehose:*:${AWS::AccountId}:deliverystream/serverless_metrics-firehose"
              - Effect: Allow
                Action:
                  - "s3:GetBucketLocation"
                  - "s3:CreateBucket"
                  - "s3:DeleteBucket"
                Resource:
                  # The bucket name will include unique id to avoid bucket duplication
                  - "arn:aws:s3:::serverless.metrics-firehose-backup-*"
  ServerlessMetricsRoleStack:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
              Service:
                - streams.metrics.cloudwatch.amazonaws.com
                - firehose.amazonaws.com
            Action:
              - sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId:
                  Ref: AWS::AccountId
      Path: "/"
      RoleName: ServerlessMetricsRole
      Policies:
        - PolicyName: "serverless-metric-stream-polices"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "firehose:PutRecord"
                  - "firehose:PutRecordBatch"
                Resource:
                  - !Sub "arn:aws:firehose:*:${AWS::AccountId}:deliverystream/serverless_metrics-firehose-*"
        - PolicyName: "serverless-kinesis-firehose-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "glue:GetTable"
                  - "glue:GetTableVersion"
                  - "glue:GetTableVersions"
                Resource:
                  - !Sub "arn:aws:glue:*:${AWS::AccountId}:catalog"
                  - !Sub "arn:aws:glue:*:${AWS::AccountId}:database/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%"
                  - !Sub "arn:aws:glue:*:${AWS::AccountId}:table/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%"
              - Effect: Allow
                Action:
                  - "s3:AbortMultipartUpload"
                  - "s3:GetBucketLocation"
                  - "s3:GetObject"
                  - "s3:ListBucket"
                  - "s3:ListBucketMultipartUploads"
                  - "s3:PutObject"
                Resource:
                  - "arn:aws:s3:::serverless.metrics-firehose-backup-*"
                  - "arn:aws:s3:::serverless.metrics-firehose-backup-*/*"
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                  - "lambda:GetFunctionConfiguration"
                Resource:
                  - !Sub "arn:aws:lambda:*:${AWS::AccountId}:function:%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%"
              - Effect: Allow
                Action:
                  - "kms:GenerateDataKey"
                  - "kms:Decrypt"
                Resource:
                  - !Sub "arn:aws:kms:*:${AWS::AccountId}:key/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%"
              - Effect: Allow
                Action:
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:/aws/kinesisfirehose/serverless_metrics-firehose-*:log-stream:*"
                  - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%:log-stream:*"
              - Effect: Allow
                Action:
                  - "kinesis:DescribeStream"
                  - "kinesis:GetShardIterator"
                  - "kinesis:GetRecords"
                  - "kinesis:ListShards"
                Resource:
                  - !Sub "arn:aws:kinesis:*:${AWS::AccountId}:stream/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%"
              - Effect: Allow
                Action:
                  - "kms:Decrypt"
                Resource:
                  - !Sub "arn:aws:kms:*:${AWS::AccountId}:key/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%"
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource:
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/ServerlessRole"
Parameters:
  AccountId:
    Description: "[!Do not change!] The Serverless AWS accountId"
    Type: String
  ReportServiceToken:
    Description: "[!Do not change!] The Stack status report Service ARN"
    Type: String
  ExternalId:
    Description: "[!Do not change!] External ID for securing the role"
    Type: String
  Version:
    Description: "[!Do not change!] Template Version"
    Type: String
