import os

from serverless.aws_lambda_otel_extension.shared import constants

ENV_AWS_LAMBDA_FUNCTION_MEMORY_SIZE = os.getenv(constants.AWS_LAMBDA_FUNCTION_MEMORY_SIZE_ENV_VAR)
ENV_AWS_LAMBDA_FUNCTION_NAME = os.getenv(constants.AWS_LAMBDA_FUNCTION_NAME_ENV_VAR)
ENV_AWS_LAMBDA_FUNCTION_VERSION = os.getenv(constants.AWS_LAMBDA_FUNCTION_VERSION_ENV_VAR)
ENV_AWS_LAMBDA_LOG_GROUP_NAME = os.getenv(constants.AWS_LAMBDA_LOG_GROUP_NAME_ENV_VAR)
ENV_AWS_LAMBDA_LOG_STREAM_NAME = os.getenv(constants.AWS_LAMBDA_LOG_STREAM_NAME_ENV_VAR)

# We may want to alter this to fetch from a boto3.Session instance instead of environment variables to enable better
# local testing.
ENV_AWS_DEFAULT_REGION = os.getenv(constants.AWS_DEFAULT_REGION_ENV_VAR)
ENV_AWS_REGION = os.getenv(constants.AWS_REGION_ENV_VAR)

ENV_TEST_DRY_LOG = os.getenv(constants.TEST_DRY_LOG_ENV_VAR)
ENV_TEST_DRY_LOG_PRETTY = os.getenv(constants.TEST_DRY_LOG_PRETTY_ENV_VAR)

ENV_SLS_OTEL_USER_SETTINGS = os.getenv(constants.SLS_OTEL_USER_SETTINGS_ENV_VAR)

ENV_SLS_OTEL_EXTENSION_LOG_LEVEL = os.getenv(constants.SLS_OTEL_EXTENSION_LOG_LEVEL_ENV_VAR)

ENV_OTEL_PYTHON_ENABLED_INSTRUMENTATIONS = os.getenv(constants.OTEL_PYTHON_ENABLED_INSTRUMENTATIONS_ENV_VAR)
ENV_OTEL_PYTHON_DISABLED_INSTRUMENTATIONS = os.getenv(constants.OTEL_PYTHON_DISABLED_INSTRUMENTATIONS_ENV_VAR)

ENV_SLS_OTEL_EXTENSION_FLUSH_TIMEOUT = os.getenv(constants.SLS_OTEL_EXTENSION_FLUSH_TIMEOUT_ENV_VAR)

ENV_OTEL_PYTHON_LOG_CORRELATION = os.getenv(constants.OTEL_PYTHON_LOG_CORRELATION_ENV_VAR)

ENV__HANDLER = os.getenv(constants._HANDLER_ENV_VAR)
ENV_ORIG_HANDLER = os.getenv(constants.ORIG_HANDLER_ENV_VAR)
