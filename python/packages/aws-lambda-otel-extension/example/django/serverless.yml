service: django

frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.8
  tracing:
    lambda: true
  layers:
    - !Ref InternalPythonExtensionDjangoExampleLambdaLayer
    - !Ref ExternalAgnosticExtensionDjangoExampleLambdaLayer
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - lambda:InvokeFunction
            - lambda:InvokeAsync
          Resource:
            - "*"
  environment:
    # DEBUG_SLS_OTEL_LAYER: true
    # OTEL_RESOURCE_ATTRIBUTES: custom.name=example-project,custom.tag.provider=serverless,service.name=service
    OTEL_PYTHON_ENABLED_INSTRUMENTATIONS: ~common,django
    SLS_AWS_LAMBDA_OTEL_EXTENSION_LOG_LEVEL: debug
    #OTEL_PYTHON_LOG_LEVEL: debug
    #OTEL_PYTHON_LOG_CORRELATION: true
    SLS_OTEL_USER_SETTINGS: |
      {
          "common": {
              "destination": {
                  "requestHeaders": "serverless_token=${self:custom.SERVERLESS_TOKEN}"
              }
          },
          "extension": {
              "opentelemetry": {
                  "http": {
                    "_url": "https://webhook.site/9fe27a37-8ebd-4a3b-9969-e446cfb03951"
                  }
              }
          },
          "opentelemetry": {
              "resource": {
                  "attributes": {
                      "service.name": "${self:custom.SLS_SERVICE_NAME}",
                      "sls_service_name": "${self:custom.SLS_SERVICE_NAME}",
                      "sls_stage": "${sls:stage}",
                      "sls_org_id": "${self:custom.SLS_ORG_ID}"
                  }
              },
              "metrics": {
                "enabled": false
              }
          },
          "logs": {
            "_destination": "https://webhook.site/9fe27a37-8ebd-4a3b-9969-e446cfb03951/ingestion/kinesis/v1/logs",
            "destination": "https://core.serverless-dev.com/ingestion/kinesis/v1/logs"
          },
          "metrics": {
            "_destination": "https://webhook.site/9fe27a37-8ebd-4a3b-9969-e446cfb03951/ingestion/kinesis/v1/metrics",
            "destination": "https://core.serverless-dev.com/ingestion/kinesis/v1/metrics"
          },
          "request": {
            "_destination": "https://webhook.site/9fe27a37-8ebd-4a3b-9969-e446cfb03951/ingestion/kinesis/v1/request-response",
            "destination": "https://core.serverless-dev.com/ingestion/kinesis/v1/request-response"
          },
          "response": {
            "_destination": "https://webhook.site/9fe27a37-8ebd-4a3b-9969-e446cfb03951/ingestion/kinesis/v1/request-response",
            "destination": "https://core.serverless-dev.com/ingestion/kinesis/v1/request-response"
          },
          "traces": {
            "_destination": "https://webhook.site/9fe27a37-8ebd-4a3b-9969-e446cfb03951/ingestion/kinesis/v1/traces",
            "destination": "https://core.serverless-dev.com/ingestion/kinesis/v1/traces"
          }
      }

package:
  patterns:
    - "!**"
    - "handler.py"
    - "manage.py"
    - "wsgi_handler.py"
    - "test_handler.py"
    - "serverless_wsgi.py"
    - ".serverless-wsgi"
    - "project/**"
    - "pages/**"

functions:
  api:
    handler: serverless_aws_lambda_otel_extension_wrapper_handler.auto_instrumenting_handler
    environment:
      ORIG_HANDLER: wsgi_handler.handler
      DJANGO_SETTINGS_MODULE: project.settings
      STRIP_STAGE_PATH: true
      TEST_HANDLER_FUNCTION: ${self:service}-${sls:stage}-test
    events:
      - httpApi: ANY /
      - httpApi: ANY /nested/{param}
      - httpApi: ANY /notfound
  test:
    handler: serverless_aws_lambda_otel_extension_wrapper_handler.auto_instrumenting_handler
    environment:
      ORIG_HANDLER: test_handler.handler
      OTEL_PYTHON_ENABLED_INSTRUMENTATIONS: ~common
    events:
      - httpApi: ANY /boomchickens

plugins:
  - serverless-python-requirements

layers:
  # externalAgnosticExtensionDjangoExample:
  #   package:
  #     artifact: ../../../../../node/packages/aws-lambda-otel-extension/dist/extension-external.zip
  externalAgnosticExtensionDjangoExample:
    path: external
    package:
      patterns:
        - "!**"
        - "extensions/**"
        - "otel-extension-external/**"
  internalPythonExtensionDjangoExample:
    path: ../../assets/internal
    package:
      patterns:
        - "!**"
        - "otel-extension-internal-python/**"

custom:
  SERVERLESS_TOKEN: ${env:SERVERLESS_TOKEN, "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"}
  SLS_SERVICE_NAME: ${env:SLS_SERVICE_NAME, self:service}
  SLS_ORG_ID: ${env:SLS_ORG_ID, "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"}
